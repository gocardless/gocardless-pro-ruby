

# encoding: utf-8
#
# WARNING: Do not edit by hand, this file was generated by Crank:
#
#   https://github.com/gocardless/crank
#
require 'uri'

module GoCardless::Enterprise
  module Resources
  # Payouts represent transfers from GoCardless to a
  # [creditor](https://developer.gocardless.com/pro/#api-endpoints-creditors).
  # Each payout contains the funds collected from one or many
  # [payments](https://developer.gocardless.com/pro/#api-endpoints-payments).
  # Payouts are created automatically after a payment has been successfully
  # collected.
    class Payout < Base
      def initialize(client)
        @client = client
      end
      
    # Returns a
    # [cursor-paginated](https://developer.gocardless.com/pro/#overview-cursor-pagination)
    # list of your payouts.
      # Example URL: /payouts
      # @param options: any query parameters, in the form of a hash
      def list(options = {})
        make_request(:get, "/payouts", options)
      end

    # Retrieves the details of a single payout.
      # Example URL: /payouts/:identity
      #
      # @param identity:       # Unique identifier, beginning with "PO" }}
      # @param options: any query parameters, in the form of a hash
      def get(identity, options = {})
        path = sub_url("/payouts/:identity", { 
          "identity" => identity
        })

        make_request(:get, path, options)
      end

      def envelope_key
        "payouts"
      end

      def sub_url(url, param_map)
        param_map.reduce(url) do |new_url, (param, value)|
          new_url.gsub(":#{param}", value)
        end
      end
    end
  end
end
