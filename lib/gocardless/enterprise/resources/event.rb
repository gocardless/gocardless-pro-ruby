

# encoding: utf-8
#
# WARNING: Do not edit by hand, this file was generated by Crank:
#
#   https://github.com/gocardless/crank
#
require 'uri'

module GoCardless::Enterprise
  module Resources
  # Events are stored for all webhooks. An event refers to a resource which has
  # been updated, for example a payment which has been collected, or a mandate
  # which has been transferred.
    class Event < Base
      def initialize(client)
        @client = client
      end
      
    # Returns a
    # [cursor-paginated](https://developer.gocardless.com/pro/#overview-cursor-pagination)
    # list of your events.
      # Example URL: /events
      # @param options: any query parameters, in the form of a hash
      def list(options = {})
        make_request(:get, "/events", options)
      end

    # Retrieves the details of a single event.
      # Example URL: /events/:identity
      #
      # @param identity:       # Unique identifier, beginning with "EV" }}
      # @param options: any query parameters, in the form of a hash
      def get(identity, options = {})
        path = sub_url("/events/:identity", { 
          "identity" => identity
        })

        make_request(:get, path, options)
      end

      def envelope_key
        "events"
      end

      def sub_url(url, param_map)
        param_map.reduce(url) do |new_url, (param, value)|
          new_url.gsub(":#{param}", value)
        end
      end
    end
  end
end
