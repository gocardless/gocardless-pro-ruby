

# encoding: utf-8
#
# WARNING: Do not edit by hand, this file was generated by Crank:
#
#   https://github.com/gocardless/crank
#
require 'uri'

module GoCardless::Enterprise
  module Resources
  # Publishable API keys are designed to be used by the [js
  # flow](https://developer.gocardless.com/pro/#api-endpoints-customer-bank-account-tokens).
  # You should generate a key and then use it to make requests to the API. They
  # do not expire, but can be disabled.
  # 
  # Publishable API keys only have
  # permissions to create [customer bank account
  # tokens](https://developer.gocardless.com/pro/#api-endpoints-customer-bank-account-tokens).
    class PublishableApiKey < Base
      def initialize(client)
        @client = client
      end
      
    # Creates a publishable API key object.
      # Example URL: /publishable_api_keys
      # @param options: any query parameters, in the form of a hash
      def create(options = {})
        make_request(:post, "/publishable_api_keys", options)
      end

    # Returns a
    # [cursor-paginated](https://developer.gocardless.com/pro/#overview-cursor-pagination)
    # list of your publishable API keys
      # Example URL: /publishable_api_keys
      # @param options: any query parameters, in the form of a hash
      def list(options = {})
        make_request(:get, "/publishable_api_keys", options)
      end

    # Returns all details about a single publishable API key
      # Example URL: /publishable_api_key/:identity
      #
      # @param identity:       # Unique identifier, beginning with "PK" }}
      # @param options: any query parameters, in the form of a hash
      def get(identity, options = {})
        path = sub_url("/publishable_api_key/:identity", { 
          "identity" => identity
        })

        make_request(:get, path, options)
      end

    # Updates a publishable API key. Only the `name` fields are supported. Any
    # other fields passed will be ignored.
      # Example URL: /publishable_api_keys/:identity
      #
      # @param identity:       # Unique identifier, beginning with "PK" }}
      # @param options: any query parameters, in the form of a hash
      def update(identity, options = {})
        path = sub_url("/publishable_api_keys/:identity", { 
          "identity" => identity
        })

        make_request(:put, path, options)
      end

    # Disables a publishable API key. Once disabled, the publishable API key
    # will not be usable to authenticate any requests.
      # Example URL: /publishable_api_keys/:identity/actions/disable
      #
      # @param identity:       # Unique identifier, beginning with "PK" }}
      # @param options: any query parameters, in the form of a hash
      def disable(identity, options = {})
        path = sub_url("/publishable_api_keys/:identity/actions/disable", { 
          "identity" => identity
        })

        make_request(:post, path, options)
      end

      def envelope_key
        "publishable_api_keys"
      end

      def sub_url(url, param_map)
        param_map.reduce(url) do |new_url, (param, value)|
          new_url.gsub(":#{param}", value)
        end
      end
    end
  end
end
